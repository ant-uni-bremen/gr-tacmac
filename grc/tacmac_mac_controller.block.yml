id: tacmac_mac_controller
label: MAC controller
category: '[tacmac]'

templates:
  imports: import tacmac
  make: tacmac.mac_controller(${destination_id}, ${source_id}, ${mtu_size})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: destination_id
  label: Destination ID
  dtype: int
  default: 42
- id: source_id
  label: Source ID
  dtype: int
  default: 21
- id: mtu_size
  label: Max. MTU size
  dtype: int
  default: 68


asserts:
- ${ destination_id != source_id }
- ${ destination_id >= 0 }
- ${ destination_id < 256 }
- ${ source_id >= 0 }
- ${ source_id < 256 }
- ${ mtu_size >= 0 }
- ${ mtu_size < 256 }


#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)

inputs:
-   domain: message
    id: LLCin
    optional: True
-   domain: message
    id: PHYin
    optional: True

outputs:
-   domain: message
    id: LLCout
    optional: True
-   domain: message
    id: PHYout
    optional: True
-   domain: message
    id: timing
    optional: True

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
